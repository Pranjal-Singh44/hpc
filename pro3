#include <stdio.h>
#include <omp.h>

int main() {
    long long steps = 1000000000;
    double step = 1.0 / steps, pi_serial = 0.0, pi_parallel = 0.0;

    double start_serial = omp_get_wtime();
    for (long long i = 0; i < steps; i++) {
        double x = (i + 0.5) * step;
        pi_serial += 4.0 / (1.0 + x * x);
    }
    pi_serial *= step;
    double end_serial = omp_get_wtime();

    double start_parallel = omp_get_wtime();
    #pragma omp parallel
    {
        double sum = 0.0;
        #pragma omp for
        for (long long i = 0; i < steps; i++) {
            double x = (i + 0.5) * step;
            sum += 4.0 / (1.0 + x * x);
        }
        #pragma omp critical
        pi_parallel += sum * step;
    }
    double end_parallel = omp_get_wtime();

    printf("Pi (Serial): %.15f\n", pi_serial);
    printf("Serial Time: %.6f seconds\n", end_serial - start_serial);

    printf("Pi (Parallel): %.15f\n", pi_parallel);
    printf("Parallel Time: %.6f seconds\n", end_parallel - start_parallel);

    return 0;
}
